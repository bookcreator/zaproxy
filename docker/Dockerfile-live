# This dockerfile builds a 'live' zap docker image using the latest files in the repos
FROM ubuntu:20.04
LABEL maintainer="psiinon@gmail.com"

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -q -y --fix-missing \
	make \
	ant \
	automake \
	autoconf \
	gcc g++ \
	openjdk-11-jdk \
	wget \
	curl \
	xmlstarlet \
	unzip \
	git \
	openbox \
	xterm \
	net-tools \
	python3-pip \
	python-is-python3 \
	firefox \
	vim \
	xvfb \
	x11vnc \
        libxext6 \
        libxi6 \
        libxtst6 \
        libxrender1 && \
	apt-get clean && \
	rm -rf /var/lib/apt/lists/*  && \
	pip3 install --upgrade pip zapcli python-owasp-zap-v2.4 && \
	useradd -d /home/zap -m -s /bin/bash zap && \
	echo zap:zap | chpasswd && \
	mkdir /zap  && \
	chown zap /zap && \
	chgrp zap /zap && \
	mkdir /zap-src  && \
	chown zap /zap-src && \
	chgrp zap /zap-src

WORKDIR /zap-src

#Change to the zap user so things get done as the right person (apart from copy)
USER zap

RUN mkdir /home/zap/.vnc

ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64/
ENV PATH $JAVA_HOME/bin:/zap/:$PATH

# Build ZAP with weekly add-ons
COPY --chown=zap:zap . .
RUN ./gradlew clean && \
    ZAP_WEEKLY_ADDONS_NO_TEST=true ./gradlew :zap:prepareDistWeekly
RUN cp -R /zap-src/zap/build/distFilesWeekly/* /zap/ && \
    rm -rf /zap-src/*

RUN cd /zap/ && \
    # Setup Webswing
    curl -s -L https://storage.googleapis.com/builds.webswing.org/releases/webswing-20.1.4.zip > webswing.zip && \
    unzip webswing.zip && \
    cp -R webswing-* webswing && \
    sed -i "s/localhost/0.0.0.0/" webswing/jetty.properties && \
    rm -rf webswing/apps && \
    rm webswing.zip && \
    # Accept ZAP license
    touch AcceptedLicense

ENV ZAP_PATH /zap/zap.sh
# Default port for use with zapcli
ENV ZAP_PORT 8080
ENV IS_CONTAINERIZED true
ENV HOME /home/zap/
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

COPY docker/zap* /zap/
COPY docker/webswing.config /zap/webswing/
COPY docker/policies /home/zap/.ZAP_D/policies/
COPY docker/policies /root/.ZAP_D/policies/
COPY docker/scripts /home/zap/.ZAP_D/scripts/
COPY docker/.xinitrc /home/zap/

#Copy doesn't respect USER directives so we need to chown and to do that we need to be root
USER root

RUN chown zap:zap /zap/* && \
    chown zap:zap /zap/webswing/webswing.config && \
    chown zap:zap -R /home/zap/.ZAP_D/ && \
    chown zap:zap /home/zap/.xinitrc && \
    chmod a+x /home/zap/.xinitrc && \
    chmod +x /zap/zap.sh && \
    rm -rf /zap-src

WORKDIR /zap/webswing

USER zap
ENV WEBSWING_JAVA_OPTS=-Xmx6g
HEALTHCHECK --retries=5 --interval=5s CMD zap-cli status
CMD WEBSWING_HOME=/zap/webswing ./webswing.sh start && tail -f /dev/null
